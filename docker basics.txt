Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. type "docker -v" to check if it's installed.
   try below commands for help
first created an ec2 instance and login into it using putty by convering a pem file to ppk.
After that installed docker on ec2 instance
commands:
Sudo apt install docker.io
sudo docker version(able to see both client sand server)
docker version(it doesnt show server)
sudo usermod -aG docker ubuntu(Here group name is docker and user is ubuntu

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
docker pull nginx
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
latest: Pulling from library/nginx
1ab2bdfe9778: Pull complete
a17e64cfe253: Pull complete
e1288088c7a8: Pull complete
By default it will download the latest and yhis image has 3 layers)

4. Find out the "Full" ImageId of the image that you pulled and write it below.
docker images( Image id of nginx 5a3221f0137b)

5. Create a container of your image 
docker run nginx:latest

6. List all the running containers
docker container ls
396391d0601c        nginx:latest        "nginx -g 'daemon of…"   About a minute ago   Up About a minute   80/tcp                              naughty_austin
f41b02d9504c        mysql               "docker-entrypoint.s…"   28 minutes ago       Up 28 minutes       0.0.0.0:3306->3306/tcp, 33060/tcp   heuristic_lalande

7. List all the running and stopped containers
To stop one container (docker container stop f41b02d9504c )
docker container ls -a
396391d0601c        nginx:latest        "nginx -g 'daemon of…"   6 minutes ago       Up 6 minutes                    80/tcp              naughty_austin
f41b02d9504c        mysql               "docker-entrypoint.s…"   33 minutes ago      Exited (0) About a minute ago                       heuristic_lalande

8. Find out the "Full" containerId of the container and write it below.
396391d0601c
9. Find out how many image layers are used to build this image.
Total 3 layers are used to build this image

1ab2bdfe9778: Pull complete
a17e64cfe253: Pull complete
e1288088c7a8: Pull complete

10. Get the Apache Tomcat 7 server image from the docker hub.
docker pull tomcat:jre8

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
docker run -p 80:8080 tomcat:jre8

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
It is using ip address of ec2 instance (52.14.10.126)

13. Which Port it is using?
It is using port 8080

14. Try to access the Tomcat's home page from your machine/vm.
By using public ip of Ec2 instance 52.14.10.126 we can access

15. What is the disk size of Apache Tomcat image?
463 MB

16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
ps -ef |grep docker 
we can see  /docker-java-home/jre/bin/java for java_home and /usr/local/tomcat/bin/bootstrap.jar for catalina_home.From this we cn see it is nothing but a process 
according to OS prspective

17. Find out which port is exposed for tomcat?
port 8080 is exposed for tomcat
18. Run multiple conntainers of tomcat on different port and access it's home page.
docker run -d -p 8080:8080 tomcat7:jre8

19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
docker pull ubuntu:14.04
docker pull ubuntu:18.04

20. Run the container of ubuntu in attached mode.
docker run -it 260da024c4bd  bash

21. Run the container of another ubuntu in detached mode.
docker run -d -it 781c436cfc02 tail -f /dev/null

22. Check how many ubuntu containers are running and stopped
one container running in detatched mode is running and other container is exited

23. Is the tomcat container running? If no, start one.
As i AM RUNNING IN DETACHED MODE BOTH ARE RUNNING

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
docker container logs 2e3fbf3a71ff

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
 docker exec -it  

26. Login as root user in ubuntu container
sudo chown ubuntu:ubuntu -R /opt

27. Create a file with any name in root directory
cd /opt/
mkdir myapp
cd myapp/
touch docker.txt
nano docker.txt (added a line Hello world)
cat docker.txt(It displays the output)

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
exit(It came out of bash script)

30. Check if the ubuntu container is running.
The ubuntu container is running as I have ran in detached mode 

31. Create a new ubuntu container out of the same image as that previous container in attached mode.
docker run -d ubuntu:18.04 tail -f /dev/null
So a new container is created

32. Login as a root user
sudo chown ubuntu:ubuntu -R /opt

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
I can see the old container and as well as the file created in container.To kill the containers Sudo kill -9 containerid tail -f /dev/null

34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
I can see the old container and as well as the file created in container

35. Create an Image out of the existing container.
docker commit -a 'ubuntu' -m 'This is My first program' 781c436cfc02 myimage(I have created my own image) 

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
docker commit -a 'ubuntu' -m 'This is My first program' 781c436cfc02 myimage(I have created my own image)

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
Yes,Tomcat container is running.
docker stop 9c0ec95866d9 
sudo docker kill -9 tail -f /dev/null

38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a(docker images -a)To list all images
2. -f(docker images -f)To filter output
3. -q(docker images -q)To list all the containers 

write atleast 1 command using each option above and prove their concepts as described in the --help.


40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a(docker ps -a)To list all containers
2. -f(docker ps -f)
3. -q(docker ps -q)To list all the containerids
4. -nshow last n cretaed continers
5. -l last created container
6. -s Display total file sizes

write atleast 1 command using each option above and prove their concepts as described in the --help.


41. Type below command:-
	docker --help

you will various sections of commands apart from options like "Managemnet Commands" and "Commands".


Write some texts below describing the use of "Management Commands".



Use each command mentioned below and prove its concepts as described in the --help desription. write what you have understood from the output of the command after its successful execution.
1. cp   Copy files/folders between a container and the local filesystem
2. create  Create a new container
3. export    Export a container's filesystem as a tar archive
4. history  Show the history of an image
5. info      Display system-wide information
6. login    	Log in to a Docker registry
7. logout	Log out from a Docker registry
8. rename	Rename a container
9. save		Save one or more images to a tar archive 
10. stats	display a live stream of container(s) resource usage statistics
11. top		Display the running processes of a container



42. Kill all running container in one liner command.
docker rm $(docker containers ls -a -q)

43. Delete all images in one liner command.
docker rmi $(docker images -q)

44. Create a simple Dockerfile, build it and run it.
	
45. Create one or more Dockerfile that demostrate the following commands in Dockerfile (Write a PoC for each in one or more Dockerfile)
	1. USER
	Set the user or UID for the container created with the image
	2. RUN
	Used to execute a command during the build process of the docker image.
	3. ENV
	Define an environment variable.

	4. CMD
	Used for executing commands when we build a new container from the docker image.

	5. RUN
	Used to execute a command during the build process of the docker image.
	6. ENTRYPOINT
	Define the default command that will be executed when the container is running.

	7. EXPOSE
	
	8. VOLUME
	Enable access/linked directory between the container and the host machine
	
46. Dockerhub:-
	Find a application you care about on docker hub.
	docker pull ubuntu

	Launch the container.
	docker run -it ubuntu /bin/bash

	Install another application in it.
	apt-get update
	apt-get install apache2

	Save (commit) the image.
	docker commit -m "launched apache2 on ubuntu" e0cab2939540 myapache
	docker tag grandhisaiteja/myapache:latest

	Upload that to docker hub in your account and share it with a colleague, ask them to use your image and run the container out of it in their machine/vm.
	docker push grandhisaiteja/myapache:latest


